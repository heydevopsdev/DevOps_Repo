// Generated by view binder compiler. Do not edit!
package com.example.housemartapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.housemartapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CustomAdapterProductBinding implements ViewBinding {
  @NonNull
  private final LinearLayoutCompat rootView;

  @NonNull
  public final AppCompatImageView imvProductImage;

  @NonNull
  public final AppCompatTextView txtProductName;

  @NonNull
  public final AppCompatTextView txtProductPrice;

  @NonNull
  public final AppCompatTextView txtProductRating;

  @NonNull
  public final AppCompatTextView txtProductRatingCount;

  private CustomAdapterProductBinding(@NonNull LinearLayoutCompat rootView,
      @NonNull AppCompatImageView imvProductImage, @NonNull AppCompatTextView txtProductName,
      @NonNull AppCompatTextView txtProductPrice, @NonNull AppCompatTextView txtProductRating,
      @NonNull AppCompatTextView txtProductRatingCount) {
    this.rootView = rootView;
    this.imvProductImage = imvProductImage;
    this.txtProductName = txtProductName;
    this.txtProductPrice = txtProductPrice;
    this.txtProductRating = txtProductRating;
    this.txtProductRatingCount = txtProductRatingCount;
  }

  @Override
  @NonNull
  public LinearLayoutCompat getRoot() {
    return rootView;
  }

  @NonNull
  public static CustomAdapterProductBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CustomAdapterProductBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.custom_adapter_product, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CustomAdapterProductBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imvProductImage;
      AppCompatImageView imvProductImage = ViewBindings.findChildViewById(rootView, id);
      if (imvProductImage == null) {
        break missingId;
      }

      id = R.id.txtProductName;
      AppCompatTextView txtProductName = ViewBindings.findChildViewById(rootView, id);
      if (txtProductName == null) {
        break missingId;
      }

      id = R.id.txtProductPrice;
      AppCompatTextView txtProductPrice = ViewBindings.findChildViewById(rootView, id);
      if (txtProductPrice == null) {
        break missingId;
      }

      id = R.id.txtProductRating;
      AppCompatTextView txtProductRating = ViewBindings.findChildViewById(rootView, id);
      if (txtProductRating == null) {
        break missingId;
      }

      id = R.id.txtProductRatingCount;
      AppCompatTextView txtProductRatingCount = ViewBindings.findChildViewById(rootView, id);
      if (txtProductRatingCount == null) {
        break missingId;
      }

      return new CustomAdapterProductBinding((LinearLayoutCompat) rootView, imvProductImage,
          txtProductName, txtProductPrice, txtProductRating, txtProductRatingCount);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
